library(dplyr)
rm(list=ls())
# Main repository folder as wd
if (!endsWith(getwd(), "tou_spain")) {
setwd(dirname(dirname(getwd())))
}
########
# Unidades de programacion
########
dfUP <- read.csv("./build/input/demand/programming_units.csv", row.names=NULL, sep=";",encoding="UTF-8")
dfUP$Potencia.máxima.MW <- as.numeric(gsub(",", ".", gsub("\\.", "", dfUP$Potencia.máxima.MW)))
########
# Sujetos de mercado
########
dfSM <- read.csv("./build/input/demand/market_subjects.csv", row.names=NULL, sep=";",encoding="UTF-8")
########
# Merge
########
# First check indentifiers are unique (ok!)
length(dfUP$Código.de.UP)
length(dfSM$Código.de.sujeto)
df <- merge(dfUP,dfSM,by.x= "Sujeto.del.Mercado",by.y = "Código.de.sujeto",all.x=T,no.dups=T)
colnames(df) <- c('codigo_sujeto','codigo_UP','descr_short_UP','descr_long_UP','potencia_max_mw_UP','eic_UP','tipo_produccion_UP','negocio_UP','zona_regulacion_UP','tipo_UP','Nombre_sujeto','eic_sujeto','tipo_sujeto')
df <- df %>%
select(codigo_UP, descr_short_UP, descr_long_UP, potencia_max_mw_UP, eic_UP, tipo_produccion_UP,
negocio_UP, zona_regulacion_UP, tipo_UP, codigo_sujeto, Nombre_sujeto, eic_sujeto,tipo_sujeto)
#Add column with Propietary firm names
df$firm <- factor(df$Nombre_sujeto)
levels(df$firm)[levels(df$firm) == "CURENERGÍA"] <- "CURENERGÍA IBERDROLA"
levels(df$firm)[levels(df$firm) == "ENERGÍA XXI COMERCIALIZADORA"] = "ENERGÍA XXI COMERCIALIZADORA ENDESA"
levels(df$firm)[levels(df$firm) == "HIDROCANTÁBRICO ENERGÍA COMERC"] = "HIDROCANTÁBRICO ENERGÍA COMERC EDP"
levels(df$firm)[levels(df$firm) == "HIDROCANTABRICO ULTIMO RECURSO"] = "HIDROCANTABRICO ULTIMO RECURSO EDP"
levels(df$firm)[levels(df$firm) == "CIDE HCENERGÍA, S.A."] = "CIDE HCENERGÍA, S.A. CHC"
levels(df$firm)[levels(df$firm) == "REGISITI COM. REGULADA"] = "REGISITI COM. REGULADA REPSOL"
levels(df$firm)[levels(df$firm) == "REPCOM EYG"] = "REPSOL"
levels(df$firm)[levels(df$firm) == "EHN GREEN ENERGY DEVELOPMENT"] = "EHN GREEN ENERGY DEVELOPMENT ACCIONA"
df$firm <- factor(df$firm)
df$firm <- as.character(df$firm)
big_firms <- c('REPSOL','EDP','ENDESA','GAS NATURAL','IBERDROLA','CHC','ACCIONA','AXPO','ENERGYA',
'CEPSA','NEXUS','GNERA','ALPIQ','BAHIA','NATURGY','VIESGO','WIND TO MARKET')
for (bf in big_firms) df$firm[grepl(bf,df$firm)]<- bf
df[!is.na(df$firm) & df$firm=="GAS NATURAL",which(colnames(df)=='firm')] <- 'NATURGY'
df[!is.na(df$firm) & df$firm=="VIESGO",which(colnames(df)=='firm')] <- 'REPSOL'
df[df$codigo_sujeto=="REPSB",which(colnames(df)=='firm')] <- 'REPSOL'
df[df$codigo_sujeto=="REPSB",which(colnames(df)=='tipo_sujeto')] <- df[df$codigo_sujeto=="REPSB",which(colnames(df)=='tipo_UP')]
# write csv
'GAS NATURAL' %in% unique(df$firm)
'VIESGO' %in% unique(df$firm)
'CHC' %in% unique(df$firm)
table(df$firm)[table(df$firm)>1]
# save nombres de sujeto de mercado for the 5 largest utilities
df_list <- df %>%
filter(tipo_UP == "Comercializador de referencia" | tipo_sujeto == "Comercializador de Referencia
") %>%
filter(firm %in% c("ENDESA", "IBERDROLA", "NATURGY", "REPSOL", "EDP")) %>%
select(firm, Nombre_sujeto, descr_long_UP, tipo_UP, tipo_sujeto, eic_UP, eic_sujeto)
write.csv(df,"./build/output/UP_market_subject_links.csv",row.names=F)
# PREPARE up_raw.csv based on raw daily files
# Actions:
# Merge daily consumption csv files
# Add UP and SM data
# Add day of the week
# Add Spanish temperature by distribution area
library("dplyr")
library("lubridate")
library("tidyverse") # package for data manipulation and plotting (ggplot2)
library("foreign")
library("haven")
library("ggplot2")
library("magrittr")  # ceci n'est pas un pipe
library("HistogramTools")
library("ncdf4")  # package for netcdf manipulation
# Main repository folder as wd
if (!endsWith(getwd(), "tou_spain")) {
setwd(dirname(dirname(getwd())))
}
#############
# Merge all days
#############
files_path <- paste0(getwd(),"/build/output/demand")
files_names <- list.files(files_path,pattern=".csv", full.names = T)
# Check that they are not duplicated files
files_dates<-gsub(".*_","",files_names)
sum(table(files_dates)>1)
# Change the subset of required files, if necessary
# files_names <- list.files(files_path,pattern="UPSalida_2021-10-")
df_list <-lapply(files_names,function(x) read.csv(x))
df0 <- df_list %>%
bind_rows()
View(df0)
#############
# Add UP and SM data
#############
# Read data about Unidades de Programacion and Sujetos de Mercado
up_sujetos <- read.csv("./build/output/UP_market_subject_links.csv")
df <- df0
df <- df %>%
merge(up_sujetos,by.x='upsalida',by.y='codigo_UP',all.x=T,no.dups=T)
#############
# Add day of the week and weekend
#############
df$date <- ymd( paste(df$year, df$month, df$day, sep="-") )
#weekday: 1 is Monday, 7 Sunday
df$week_day <- ifelse(wday(df$date)==1,6,wday(df$date)-2) + 1
#weekend
df$weekend <- ifelse(df$week_day>=6,1,0)
df <- df %>%
select(upsalida,idst,negocio,year,month,day,week_day,weekend,h1:firm) %>%
arrange(year,month,day,upsalida)
df_up0 <- df
summary(df_up0)
### Notes: ##########################################################################
## This code merge temperature data with UP consumption data
#####################################################################################
##### 0.  Loading  data  ###############################
# EStemp used to be called data_temp in Drive
read.csv(file = "./build/input/EStemp.csv",header=TRUE, sep = ",",dec=".")%>%
select(-X)%>%filter(year>2017)->df_temp
df_temp%>%
select(-date,-lon,-lat,-match)->df_temp
df_temp$hour<-as.numeric(substr(df_temp$hour, 1, 2))+1
df_up0%>%
group_by(upsalida,year,month,day,week_day,weekend,tipo_UP,tipo_sujeto,firm,Nombre_sujeto)%>%
summarise_at(colnames(df_up0)[which(colnames(df_up0) %in% "h1"):which(colnames(df_up0) %in% "h24")],
sum,na.rm = TRUE) -> df_up #aggregate at upsalida
##### 1. Aggregate data at distr and country level    ###############################
df_temp%>%
group_by(year,month,day,hour,distr)%>%
summarise(temp= weighted.mean(temp,population),
population=sum(population)) ->df_temp_agg
df_temp_agg%>%
group_by(year,month,day,hour)%>%
summarise(temp= weighted.mean(temp,population),
population=sum(population),
distr="SPAIN") ->df_temp_s
as.data.frame(rbind(df_temp_agg,df_temp_s))%>%
select(-population)->df_temp_agg
df_temp_agg<-reshape(data=df_temp_agg,idvar = c("year","month","day","distr"),v.names = "temp",timevar = "hour",direction = "wide")
##### 2.  Merge comercializador de referencia with distr temperature   ###############################
df_up$monthchar<-sprintf("%02d",df_up$month)
df_up$daychar<-sprintf("%02d",df_up$day)
df_temp_agg$monthchar<-sprintf("%02d",df_temp_agg$month)
df_temp_agg$daychar<-sprintf("%02d",df_temp_agg$day)
df_temp_agg$match<-paste0(df_temp_agg$year,df_temp_agg$monthchar,df_temp_agg$daychar,df_temp_agg$distr)
##### 2.1  comercializador de referencia with distr temperature   ###############################
df_up%>%filter(tipo_UP == "Comercializador de referencia")->df_ref
df_ref$match<-paste0(df_ref$year,df_ref$monthchar,df_ref$daychar,df_ref$firm)
dfmerged<-left_join(df_ref,df_temp_agg,by="match")
dfmerged%>%
select(upsalida,year=year.x,month=month.x,day=day.x,week_day:h24,distr:temp.24)->df_ref
##### 2.2  others with distr spain   ###############################
df_up%>%filter(tipo_UP != "Comercializador de referencia" | (tipo_UP == "Comercializador de referencia" &
Nombre_sujeto=="CHC COMERCIAL DE REFERENCIA"))->df_all
df_all$distr<-"SPAIN"
df_all$match<-paste0(df_all$year,df_all$monthchar,df_all$daychar,df_all$distr)
dfmerged<-left_join(df_all,df_temp_agg,by="match")
dfmerged%>%
select(upsalida,year=year.x,month=month.x,day=day.x,week_day:h24,distr=distr.x,temp.1:temp.24)->df_all
df_all$distr<-NA
df<-as.data.frame(rbind(df_ref,df_all))
# find missing hours
l<-which(is.na(df$temp.3))
for (i in 1:length(which(is.na(df$temp.3)))){
df$temp.3[l[i]]<-(df$temp.2[l[i]]+df$temp.4[l[i]])/2
}
summary(df)
unique(df_ref$firm)
write.csv(x=df, file="./build/output/up_clean.csv", row.names = F)
c("dplyr", "lubridate", "tidyverse", "foreign", "haven", ,"ggplot2",
"magrittr", "HistogramTools", "ncdf4")
packages <- c("dplyr", "lubridate", "tidyverse", "foreign", "haven", ,"ggplot2",
"magrittr", "HistogramTools", "ncdf4")
packages <- c("dplyr", "lubridate", "tidyverse", "foreign", "haven", "ggplot2",
"magrittr", "HistogramTools", "ncdf4")
packages <- c("dplyr", "lubridate", "tidyverse", "foreign", "haven", "ggplot2",
"magrittr", "HistogramTools", "ncdf4")
install.packages(setdiff(packages, rownames(installed.packages())))
R.version
